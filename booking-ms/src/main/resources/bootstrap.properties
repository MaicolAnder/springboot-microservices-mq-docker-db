spring.application.name=booking-ms
server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

## Url where is running ConfigServe
spring.cloud.config.uri=http://localhost:8888

## Profile to ConfigServe (dev, prod)
spring.cloud.config.profile=dev

## Expose APIS from actuator
# management.endpoints.web.exposure.include=*

## database mysql driver connection (Load from ConfigServe)
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.hibernate.ddl-auto=update   ## Paso a ConfigServe
# spring.jpa.show-sql=true               ## Paso a ConfigServe

## Database datasource & auth
# spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/ms-booking ## Paso a ConfigServe
# spring.datasource.username=root   ## Paso a vault
# spring.datasource.password=       ## Paso a vault


## Config connection vault
spring.cloud.vault.application-name=booking-ms
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token= 00000000-0000-0000-0000-000000000000

## Message broker config with RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

